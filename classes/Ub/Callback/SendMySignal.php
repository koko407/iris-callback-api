<?php
//upd:2021/09/23
/**
 * @const TIME_START –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 */
	if(!defined('TIME_START')) {
	    define ('TIME_START', microtime(true)); // –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
	}

class UbCallbackSendMySignal implements UbCallbackAction {

	function closeConnection() {
		@ob_end_clean();
		@header("Connection: close");
		@ignore_user_abort(true);
		@ob_start();
		echo 'ok';
		$size = ob_get_length();
		@header("Content-Length: $size");
		@ob_end_flush(); // All output buffers must be flushed here
		@flush(); // Force output to client
	}

	function execute($userId, $object, $userbot, $message) {
		$chatId = UbUtil::getChatId($userId, $object, $userbot, $message);
		if (!$chatId) {
			UbUtil::echoError('no chat bind', UB_ERROR_NO_CHAT);
			return;
		}

		self::closeConnection();

		$vk = new UbVkApi($userbot['token']);
		$in = $object['value']; // –Ω–∞—à —Å–∏–≥–Ω–∞–ª
		#time = $vk->getTime(); // ServerTime
		$time = time(); # –≤—Ä–µ–º—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞

		/* ping —Å–ª—É–∂–µ–±–Ω—ã–π —Å–∏–≥–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ *
		 * –Ω–∞—á–∏–Ω–∞—è —Å –ø–µ—Ä–≤—ã—Ö –≤–µ—Ä—Å–∏–π —Ñ–æ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—Ä–µ–º—è –∑–∞ —Å–∫–æ–ª—å–∫–æ —Å–∏–≥–Ω–∞–ª –¥–æ—à–µ–ª —Å—é–¥–∞ *
		 * –≤–∞—Ä–∏–∞–Ω—Ç —Å –º–∏–∫—Ä–æ—Ç–∞–π–º–æ–º —Ö–æ—Ç—å –∏ –ø—Ä–∏–µ–º–ª–µ–º, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º, –∫–∞–∫ –º–Ω–æ–≥–∏–µ —Å—á–∏—Ç–∞—é—Ç,
		 * –∏–±–æ –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å—ë—Ä–∞–≤–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –¥–∞ –∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤–∫, –∞ –Ω–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ ‚Ä¶
		 * —Ç–∞–∫ —á—Ç–æ –ª–æ–≥–∏—á–Ω–µ–µ –æ–ø–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏, –æ—Ç–Ω–∏–º–∞—è –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –í–ö –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è */
		if ($in == 'ping' || $in == '–ø–∏–Ω–≥' || $in == '–ø—ñ–Ω–≥' || $in == '–ø—ñ–Ω“ë' || $in == '–∑—à—Ç–ø') {
				$time = $vk->getTime(); /* ServerTime ‚Äî —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ –í–ö */
				$vk->chatMessage($chatId, "PONG\n" .($time - $message['date']). " —Å–µ–∫");
				return;
		}

		/* –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö */
		if ($in == '–æ–±–Ω–æ–≤–∏—Ç—å' || $in == '–æ–Ω–æ–≤–∏—Ç–∏') {
				$getChat = $vk->getChat($chatId);
				$chat = $getChat["response"];
				$upd = "UPDATE `userbot_bind` SET `title` = '$chat[title]' WHERE `code` = '$object[chat]';";
				UbDbUtil::query($upd);
				return;
		}

		/* –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ */
		if ($in == 'info' || $in == '—ñ–Ω—Ñ–æ' || $in == '—ñ–Ω—Ñ–∞' || $in == '–∏–Ω—Ñ–æ' || $in == '–∏–Ω—Ñ–∞') {
		$chat = UbDbUtil::selectOne('SELECT * FROM userbot_bind WHERE id_user = ' . UbDbUtil::intVal($userId) . ' AND code = ' . UbDbUtil::stringVal($object['chat']));
		$getChat = $vk->getChat($chatId);
		if(!$chat['title']) {
				$chat['title'] = (isset($getChat["response"]["title"]))?(string)@$getChat["response"]["title"]:'';
				$upd = "UPDATE `userbot_bind` SET `title` = '$chat[title]' WHERE `code` = '$object[chat]';";
				UbDbUtil::query($upd); }
		$msg = "üí¨ Chat id: $chatId\n";
		$msg.= "‚Ñπ Iris id: $object[chat]\n";
		$msg.= "üè∑ Chat title: $chat[title]\n";
		if ($chat['id_duty']) {
		$msg.= "üë§ –î–µ–∂—É—Ä–Ω—ã–π: @id$chat[id_duty]\n"; }
		$vk->chatMessage($chatId, $msg, ['disable_mentions' => 1]);
		return;
		}

		/* –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –æ–Ω–ª–∞–π–Ω–∞ (mtoken –æ—Ç vk,me) */
		if (preg_match('#–æ—Ñ—Ñ–ª–∞–π–Ω#ui', $in)) {
				//$status - nobody(–æ—Ñ—Ñ–ª–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö), all(–û—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ñ—Ñ–ª–∞–π–Ω–∞), friends(–æ—Ñ—Ñ–ª–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –¥—Ä—É–∑–µ–π)
				$token = (isset($userbot['mtoken']))?$userbot['mtoken']:$userbot['token'];
				$status='';
				sleep(0.3);
				if ($in=='-–æ—Ñ—Ñ–ª–∞–π–Ω')$status = 'all';
				if ($in=='+–æ—Ñ—Ñ–ª–∞–π–Ω')$status='friends';
				if ($in=='++–æ—Ñ—Ñ–ª–∞–π–Ω')$status='nobody';
				if ($status == 'all' || $status == 'friends' || $status == 'nobody') {
				$res =  $vk->onlinePrivacy($status, $token); sleep(0.45);
				if (isset($res['error'])) {
				$msg = UB_ICON_WARN . ' ' . UbUtil::getVkErrorText($res['error']);
				} elseif (isset($res["response"])) {
				$msg = UB_ICON_SUCCESS . ' ' . (string)@$res["response"]["category"];
				} else { $msg = UB_ICON_WARN . ' ' . json_encode(@$res); }
				$vk->chatMessage($chatId, $msg); }
				return;
		}

		/* —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:-—Å–º—Å|–¥–¥|—Ä–¥( –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)? */
		if (preg_match('#^(\-—Å–º—Å|–¥–¥|—Ä–¥)([0-9\ ]{1,4})?#', $in, $c)) {
				@set_time_limit(30); // –≠—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ? –ê —Ö–∑.
				$amount = (int)@$c[2]; sleep(0.42); // too many requests!?
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']); sleep(0.42);
				$mid = (int)@$msg['response']['items'][0]['id']; // –±—É–¥–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë
				if ($mid) { $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_SUCCESS_OFF . " —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏—è ..."); sleep(0.42); }
				$deleted = 0;
				$offset = 1;
				$stop = False;
				$text = (string)@$c[0];
				$pong = time() - TIME_START;
				while ($pong <=26) {
				$pong = time() - TIME_START; sleep(0.42);
				$GetHistory = $vk->messagesGetHistory(UbVkApi::chat2PeerId($chatId), $offset, 200); sleep(0.42);
				if (isset($GetHistory['error'])) { $error = UbUtil::getVkErrorText($GetHistory['error']);
				if ($mid) { $edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$error); } sleep(0.42); 
				} elseif (isset($GetHistory['response']['items'])) {
				$messages = $GetHistory['response']['items'];
				$ids = Array();
				foreach ($messages as $m) {
				$away = time() - $m["date"];
				$pong = time() - TIME_START; sleep(0.42);
				if (($amount && ($deleted + count($ids)) >= $amount) || $pong >= 26 || $away >= 82800) {
				$stop = true;	break; 
				} elseif ((int)$m["from_id"] == $userId && $away < 84000 && !isset($m["action"])) {
				if ($c[1]=='—Ä–¥' && isset($m["text"]) && (string)@$m["text"]!=''){
				$r=$vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$m['id'],'&#13;'); sleep(0.35); }
				$ids[] = $m['id']; }/* —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤*/
				$away = time() - $m["date"];
				$pong = time() - TIME_START; /* —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç–∞–µ–º */
				if (($amount && ($deleted + count($ids)) >= $amount) || $pong >= 26 || $away >= 82800) {
				$stop = true;	break; }
				}/*foreach($messages*/
				if (($deleted + count($ids)) == 0 && $stop == true) {
				$text = UB_ICON_WARN . ' —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞—à–ª–æ—Å—å';
				if ($mid) {
						$edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$text); sleep(3.5);
						$vk->messagesDelete($mid, true); sleep(0.35);
						 
						return; }
				$vk->chatMessage($chatId,$text);  return; }//0 msgs deleted
				if (count($ids) > 0) {
				$res = $vk->messagesDelete($ids, true, false); sleep(0.42);
				if (isset($res['error'])) {
				$error = UbUtil::getVkErrorText($res['error']);
				if ($mid) { $edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$error); } else {
				$vk->chatMessage($chatId, UB_ICON_WARN . ' ' . $error); }
				} else {
				$deleted+=count($ids); 
				$text = UB_ICON_SUCCESS . " —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã: {$deleted}";
				if ($mid) { $edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$text); } 
				} /*deleted*/
				} /*$ids>0*/
				if(!$stop){ $offset+=(200-count($ids)); unset($ids); sleep(0.42); } else return;
				} else { /*!isset($GetHistory['response']['items'])?!*/
				$error = UB_ICON_WARN . ' –ë–ï–î–´ –° API';
				if ($deleted == 0) {
				if ($mid) { $edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$error); }
				 return;
				} else {
				$text = UB_ICON_SUCCESS . " —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã: {$deleted}";
				if ($mid) { $edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$text); sleep(3.5);
						$vk->messagesDelete($mid, true); 
				}/*m[id]*/
				}/*del>0*/
				 return;
				}/*!isset($GetHistory['response']['items'])*/
				$pong = time() - TIME_START;
				if ($pong>=26) {
						$text.= UB_ICON_WARN . "\nTimeOut: {$pong} sec.";
				if ($mid) {
						$edit = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId),$mid,$text); sleep(3.5);
						$vk->messagesDelete($mid, true); }
				 return; } else sleep(0.3);
				}//while ($pong <=26)

				return;
		}/* —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:-—Å–º—Å|–¥–¥|—Ä–¥ */

		/* —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ (—Å–º–∞–π–ª–∏–∫ –≤–æ–∑–ª–µ –∏–º–µ–Ω–∏) */
		if (preg_match('#setCovidStatus ([0-9]{1,3})#ui',$message['text'],$s)) {
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']);
				$mid = (int)@$msg['response']['items'][0]['id'];
				$set = $vk->setCovidStatus((int)@$s[1], @$userbot['ctoken']);
				if (isset($set['error'])) {
				$error = UbUtil::getVkErrorText($set['error']);
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . ' ' . $error); 
				} elseif(isset($set['response'])) {
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_SUCCESS); 
				}
				return;
		}

		/* –∫–æ–≥–¥–∞ –±—ã–ª(–∏) –æ–±–Ω–æ–≤–ª–µ–Ω(—ã) —Ç–æ–∫–µ–Ω(—ã)// –±–ø—Ç–æ–∫–µ–Ω –∏–ª–∏ –≤—Å–µ */
		if ($in == '–±–ø—Ç' || $in == '–±–ø—Ç–∞–π–º' || $in == 'bptime') {
				$ago = time() - (int)@$userbot['bptime'];
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']);
				$mid = (int)@$msg['response']['items'][0]['id'];
				if(!$userbot['bptime']) { 
				$msg = UB_ICON_WARN . ' –Ω–µ –∑–∞–¥–∞–Ω';
				} elseif($ago < 59) {
				$msg = "$ago —Å–µ–∫. –Ω–∞–∑–∞–¥";
				} elseif($ago / 60 > 1 and $ago / 60 < 59) {
				$min = floor($ago / 60 % 60);
				$msg = $min . ' –º–∏–Ω—É—Ç' . self::number($min, '–∞', '—ã', '') . ' –Ω–∞–∑–∞–¥';
				} elseif($ago / 3600 > 1 and $ago / 3600 < 23) {
				$min = floor($ago / 60 % 60);
				$hour = floor($ago / 3600 % 24);
				$msg = $hour . ' —á–∞—Å' . self::number($hour, '', '–∞', '–æ–≤') . ' –∏ ' .
				$min . ' –º–∏–Ω—É—Ç' . self::number($min, '–∞', '—ã', '') . ' —Ç–æ–º—É –Ω–∞–∑–∞–¥';
				} else {
				$msg = UB_ICON_WARN . ' –±–æ–ª–µ–µ 23 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥';
				$vk->SelfMessage("$msg"); sleep(1); }
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $msg);
				return;
		}

		/* .—Å –±–ø—Ç {85} ‚Äî¬†—É—Å—Ç–∞–Ω–æ–≤–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ø—Ç–æ–∫–µ–Ω–∞
		** (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —á–∞—Ç–∞—Ö –∫—É–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥—Ä–∞–ª–∞—à–∞—Ç—å) */
		if (preg_match('#^–±–ø—Ç ([a-z0-9]{85})#', $in, $t)) {
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']);
				$mid = (int)@$msg['response']['items'][0]['id'];
				$res = $vk->addBotToChat('-174105461', $chatId, $t[1]);
				#res = $vk->addBotToChat('-182469235', $chatId, $t[1]);
				if (isset($res['error'])) {
				$error = UbUtil::getVkErrorText($res['error']);
				if ($error == '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–µ—Å–µ–¥–µ') {
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_SUCCESS); 
				$setbpt = 'UPDATE `userbot_data` SET `btoken` = '.UbDbUtil::stringVal($t[1]).', `bptime` = ' . UbDbUtil::intVal(time()).' WHERE `id_user` = ' . UbDbUtil::intVal($userId);
				$upd = UbDbUtil::query($setbpt);
				$vk->messagesDelete($mid, true); } else 
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . ' ' . $error); }
				return;
		}

		/* .—Å —Å—Ç {85} ‚Äî¬†—É—Å—Ç–∞–Ω–æ–≤–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ covid token */
		if (preg_match('#^—Å—Ç ([a-z0-9]{85})#', $in, $t)) {
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']);
				$mid = (int)@$msg['response']['items'][0]['id'];
				$set_ct = 'UPDATE `userbot_data` SET `ctoken` = '.UbDbUtil::stringVal($t[1]).' WHERE `id_user` = ' . UbDbUtil::intVal($userId);
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_SUCCESS); 
				$upd = UbDbUtil::query($set_ct);
				$vk->messagesDelete($mid, true);
				//echo 'ok';
				return;
		}

		/* –ò—Ä–∏—Å –≤ {—á–∏—Å–ª–æ} ‚Äî¬†–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ò—Ä–∏—Å –≤ —á–∞—Ç {–Ω–æ–º–µ—Ä} */
		if (preg_match('#(Iris|–ò—Ä–∏—Å) –≤ ([0-9]+)#ui', $in, $c)) {
				$res = $vk->addBotToChat('-174105461', $c[2], @$userbot['btoken']);
				if (isset($res['error'])) {
				$error = UbUtil::getVkErrorText($res['error']);
				$vk->chatMessage($chatId, UB_ICON_WARN . ' ' . $error); }
				$vk->messagesSetMemberRole($c[2], '-174105461', $role = 'admin');
				return;
		}

		/* –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */
		if ($in == '–∑–∞–∫—Ä–µ–ø' || $in == '+–∑–∞–∫—Ä–µ–ø') {
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']); sleep(0.45); /* –ø–∞–º'—è—Ç–∞—î–º–æ –ø—Ä–æ –ª—ñ–º—ñ—Ç–∏ */
				$mid = (int)@$msg['response']['items'][0]['id'];
				$fwd = []; /* –º–∞—Å—Å–∏–≤. –≤—Å–µ–≥–¥–∞. —á—Ç–æ–± count($fwd) >= 0*/
		if (isset($msg["response"]["items"][0]["fwd_messages"])) {
				$fwd[0] = $msg["response"]["items"][0]["fwd_messages"]; }

		if (isset($msg["response"]["items"][0]["reply_message"])) {
				$fwd[0] = $msg["response"]["items"][0]["reply_message"]; }

		if(!count($fwd)) {
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . ' –ù–µ –Ω–∞—à—ë–ª —à–æ –∑–∞–∫—Ä–µ–ø–∏—Ç—å?!');
				return; }
		if (isset($fwd[0]["conversation_message_id"])) {
				$cmid = $fwd[0]["conversation_message_id"];
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $cmid); sleep(0.45);
				if (isset($msg['error'])) {
				$msg = UB_ICON_WARN . ' ' . UbUtil::getVkErrorText($msg['error']);
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				return; }
				$pid = (int)@$msg['response']['items'][0]['id'];
				if(!self::isMessagesEqual($fwd[0], $msg['response']['items'][0])) {
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN); 
				return; }
				$pin = $vk->messagesPin(UbVkApi::chat2PeerId($chatId), $pid); sleep(0.5);
				if (isset($pin['error'])) {
				$msg = UB_ICON_WARN . ' ' . UbUtil::getVkErrorText($pin['error']);
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				} return; } else {
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN); 
				}
				return;
		}

		/* –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */
		if ($in == '-–∑–∞–∫—Ä–µ–ø' || $in == 'unpin') {
				$unpin = $vk->messagesUnPin(UbVkApi::chat2PeerId($chatId)); sleep(0.5);
				if (isset($unpin['error'])) {
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']); sleep(0.45); /* –ø–∞–º'—è—Ç–∞—î–º–æ –ø—Ä–æ –ª—ñ–º—ñ—Ç–∏ */
				$mid = (int)@$msg['response']['items'][0]['id'];
				$msg = UB_ICON_WARN . ' ' . UbUtil::getVkErrorText($unpin['error']);
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				}
				return;
		}

		/* –Ω–∞–π—Ç–∏ –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ) —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ —á–∞—Ç–µ */
		if (preg_match('#^—É–≤–µ–¥—ã([0-9\ ]{1,4})?#', $in, $c)) {
				$amount = (int)@$c[1];
				if(!$amount)$amount=5;
				$res = $vk->messagesSearch("id$userId", $peerId = 2000000000 + $chatId, $count = 100);
				if (isset($res['error'])) {
				$error = UbUtil::getVkErrorText($res['error']);
				$vk->chatMessage($chatId, UB_ICON_WARN . ' ' . $error);
				return; }
				$ids=[];
				if((int)@$res["response"]["count"] == 0) {
				$vk->chatMessage($chatId, '–ù–ï–ú–ê'); 
				return; }
				foreach ($res['response']['items'] as $m) {
				$away = $time-$m["date"];
				if(!$m["out"] && $away < 84000 && !isset($m["action"])) {
				$ids[]=$m["id"];
				if ($amount && count($ids) >= $amount) break; }
				}
				if(!count($ids)) {
				$vk->chatMessage($chatId, '–ù–ï–ú–ê'); 
				return; }

				$vk->chatMessage($chatId, '‚Ä¶', ['forward_messages' => implode(',',$ids)]);

				return;
		}

		if (preg_match('#–¥–æ–≤#ui',$in)) {
				/* —Ä–∞–±–æ—Ç–∞ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ "–¥–æ–≤" */
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']); sleep(0.4);
				$mid = (int)@$msg['response']['items'][0]['id'];
				$act = False; /* —à–æ –≤–∞—â–µ –¥–µ–ª–∞—Ç—å? */
				
				if ($in == '–¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ' || $in == '–¥–æ–≤–µ—Ä–µ–Ω—ã–µ' || $in == '–¥–æ–≤—ñ—Ä–µ–Ω—ñ' || $in == '–¥–æ–≤—ã') {
				$opt = ['disable_mentions' => 1, 'dont_parse_links' => 1];
				if(!$userbot['access']) {
				$msg = ' –ü–£–°–¢–û.';
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return;
				}#–Ω–µ—Ç—É.
				$usersGet = $vk->usersGet($userbot['access']); sleep(0.34);
				if (isset($usersGet['error'])) {
				$msg = UbUtil::getVkErrorText($usersGet['error']);
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return;
				}
				if (isset($usersGet['response'])) {
				$users = $usersGet['response'];
				$msg = "üìÉ –î–û–°–¢–£–ü –ù–ê–î–ê–ù–û:\n";
        foreach ($users as $user) {
            
            $id = (int)$user["id"]; // id —é–∑–µ—Ä–∞ –¥–ª—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
            $name=self::for_name(@$user["first_name"] .' ' . @$user["last_name"]);
            $msg.= "üë§ [id$id|$name]\n"; // list item –¥–ª—è —Å–ø–∏—Å–∫—É

        }

				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return;
				}
				return;
				}#–¥–æ–≤—ã

				
		if ($in == '–º–¥–æ–≤—ã') {
				$q = "SELECT `id_user` FROM `userbot_data` WHERE `userbot_data`.`access` LIKE '%$userId%' AND `userbot_data`.`id_user` > '0' ORDER by `userbot_data`.`id_user` ASC;";
				$u = UbDbUtil::select($q);
				if(!$u) {
				$msg = UB_ICON_WARN . ' –ü–£–°–¢–û.';
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return; }
				$ids = '';
				foreach ($u as $item) {
				  $ids = ($ids=='')? $item['id_user']:"$ids,$item[id_user]";
				}

				$usersGet = $vk->usersGet($ids); sleep(0.34);
				if (isset($usersGet['error'])) {
				$msg = UB_ICON_WARN . UbUtil::getVkErrorText($usersGet['error']);
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return;
				}
				if (isset($usersGet['response'])) {
				$users = $usersGet['response'];
				$msg = "üìÉ –í–∞–º –¥–æ–≤–µ—Ä—è—é—Ç:\n";
        foreach ($users as $user) {
            
            $id = (int)$user["id"]; // id —é–∑–µ—Ä–∞ –¥–ª—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
            $name=self::for_name(@$user["first_name"] .' ' . @$user["last_name"]);
            $msg.= "üë§ [id$id|$name]\n"; // list item –¥–ª—è —Å–ø–∏—Å–∫—É

        }

				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return;

				}
				return;
				}#–º–¥–æ–≤—ã

				$ids = []; /* –º–∞—Å—Å–∏–≤. –≤—Å–µ–≥–¥–∞. —á—Ç–æ–± count($ids) >= 0*/
				if (isset($msg["response"]["items"][0]["fwd_messages"])) {
				foreach($msg["response"]["items"][0]["fwd_messages"] as $m) {
				$ids[$m["from_id"]]=$m["from_id"];
				}//–ê–π–¥–∏—à–∫–∏ –∞–≤—Ç–æ—Ä–æ–≤ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö
				}
				if (isset($msg["response"]["items"][0]["reply_message"])) {
				$id=$msg["response"]["items"][0]["reply_message"]["from_id"];
				$ids[$id] = $id; }
				if (count($ids) == 0) {
				$msg = "!! –û–¢–í–ï–¢ –ò–õ–ò –ü–ï–†–ï–°–´–õ !!";
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg); 
				return;
				}

		if ($in == '+–¥–æ–≤' || $in == '-–¥–æ–≤') {

				$msg = '';
				$dov = $userbot['access'];

				foreach($ids as $id) {
				
				if ($in == '+–¥–æ–≤' && $id > 0) {
				if(!preg_match("#$id#ui",$dov)){
				$dov.= ",$id"; }
				$msg.= UB_ICON_SUCCESS ." $in @id$id\n";
				}
				
				if (preg_match("#$id#ui",$dov) && $in == '-–¥–æ–≤' && $id != $userId) {
				$sho = array(",$id,",",$id","$id,",",,");
				$na  = array(",", "", "", ",");
				$dov = str_replace($sho,$na,$dov);
				$msg.= UB_ICON_SUCCESS_OFF." $in @id$id\n";
				}
				
				}//foreach($ids as $id)
				
				if ($dov != $userbot['access']){
				UbDbUtil::query("UPDATE `userbot_data` SET `access` = '$dov' WHERE `id_user` = '$userId'");
				}

				if ($msg) {
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $msg); 
				if(!isset($r['error'])) { return; }
				}
				$vk->chatMessage($chatId, $msg, ['disable_mentions' => 1]);
				return; }
				return;
		}//¬±–¥–æ–≤(—ã);
		
		

		}/* —Ä–∞–±–æ—Ç–∞ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ "–¥–æ–≤" */


########################################################################

		/* –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ —á–∞—Ç. –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã¬†—Å —ç—Ç–∏–º —Å–∏–≥–Ω–∞–ª–æ–º: 
		** –≤–æ –º–Ω–æ–≥–∏—Ö —á–∞—Ç–∞—Ö –∑–∞–ø—Ä–µ—â–µ–Ω—ã¬†—Å—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Ç—ã. –ª—É—á—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–≥–Ω–∞–ª */
		if (preg_match('#https?://vk.me/join/([A-Z0-9\-\_\/]{24})#ui',$message['text'],$l)) {
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']);
				$mid = (int)@$msg['response']['items'][0]['id']; // –±—É–¥–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë
				$New = $vk->joinChatByInviteLink($l[0]);
				if (is_numeric($New)) {
				$msg = UB_ICON_SUCCESS . " $New ok";
				$vk->chatMessage($New,'!—Å–≤—è–∑–∞—Ç—å'); sleep(2.5);
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $msg);
				} else { $msg = UB_ICON_WARN . " $New";
				$vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, UB_ICON_WARN . @$New); }
				//echo 'ok';
				return;
		}

########################################################################

		if ($in == '–ø–∞—Ç–æ–≥–µ–Ω') {
				sleep(0.34);
				$msg = $vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId), $object['conversation_message_id']);
				$mid = (int)@$msg['response']['items'][0]['id']; // –±—É–¥–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë

				for ($i = 1; $i <= 10; $i++) {
				sleep(0.34);
				$msg = '.–ª–∞–± –≤ –ª—Å';
				$sms = $vk->vkRequest('messages.send', 'random_id=' . mt_rand(0, 2000000000) . '&user_id=' . -174105461 . "&message=".urlencode($msg)); sleep(0.34);
				if (isset($sms['response'])) {
				$smsid = (int)@$sms['response'];
				if ($smsid) { $vk->messagesDelete($smsid, true); }
				}
				sleep(0.34);
				$getOneMSG = $vk->vkRequest('messages.getHistory', 'peer_id=-174105461&count=1'); sleep(0.34);
				if (isset($getOneMSG['response']['items'][0]['text'])) {
				$iristxt = $getOneMSG['response']['items'][0]['text'];
				$newtext = '';
				if (preg_match('#üî¨ –î–æ—Å—å–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ (.*)\:\n–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: \[id([0-9]+)\|(.*)\]\n#ui', $iristxt, $t)) {
				$vk->vkRequest('messages.markAsRead', 'peer_id=-174105461'); sleep(0.34);# —á—Ç–æ–± –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏–ª–∞ —É–≤–µ–¥–∞
				if (preg_match('#üß™ –ì–æ—Ç–æ–≤—ã—Ö –ø–∞—Ç–æ–≥–µ–Ω–æ–≤: ([0-9]+) –∏–∑ ([0-9]+)#ui', $iristxt, $t)) {
				$newtext.= "üéØ –°–Ω–∞—Ä—è–¥–æ–≤: $t[1] –∏–∑ $t[2]\n"; }
				if (preg_match('#–ù–æ–≤—ã–π –ø–∞—Ç–æ–≥–µ–Ω: (.*)\n#ui', $iristxt, $t)) {
				$newtext.= "‚è≥ –ù–æ–≤—ã–π —Å–Ω–∞—Ä—è–¥: $t[1]\n"; }
				if (preg_match('#–ë–∏–æ-–æ–ø—ã—Ç: (.*)\n#ui', $iristxt, $t)) {
				$newtext.= "‚ú® –û–ø—ã—Ç: $t[1]\n\n"; }
				if ($newtext) {
				if (preg_match('# –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≥–æ—Ä—è—á–∫–∏.+#ui', $iristxt, $t)) {
				$newtext.= UB_ICON_WARN . $t[0]; 
				if (preg_match('#–≤—ã–∑–≤–∞–Ω–Ω–æ–π –±–æ–ª–µ–∑–Ω—å—é ¬´(.+)¬ª#ui', $iristxt, $p)) {
				$getText="–∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–∞—Ç–æ–≥–µ–Ω–æ–º ¬´$p[1]¬ª";sleep(0.34);
				$res = $vk->messagesSearch("$getText", $peerId = null, $count = 100); sleep(0.3);
				if (isset($res['response']['items'])) {	
				foreach($res['response']['items'] as $item){
				if (preg_match("#\[id([0-9]+)\|(.*)\] (–ø–æ–¥–≤–µ—Ä–≥|–ø–æ–¥–≤–µ—Ä–≥–ª–∞) –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–∞—Ç–æ–≥–µ–Ω–æ–º ¬´(.+)¬ª#ui", 
				$item['text'], $t)) {
				$p_uid=(int)@$t[1];
				$pname=(string)@$t[4];
				$newtext=preg_replace("#$pname#ui","[id{$p_uid}|$pname]",$newtext,1); 
				if ($pname == $p[1]){ $rplsd = True; break; }
				}//preg_match("#\[id([0-9]+)\|(.*)\] (–ø–æ–¥–≤–µ—Ä–≥|–ø–æ–¥–≤–µ—Ä–≥–ª–∞) –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–∞—Ç–æ–≥–µ–Ω–æ–º ¬´$p[1]¬ª#ui"
				}	// item			
				} //items
				} //#–≤—ã–∑–≤–∞–Ω–Ω–æ–π –±–æ–ª–µ–∑–Ω—å—é
				} else {
				$newtext.= UB_ICON_SUCCESS . " –≥–æ—Ä—è—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞";				}
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $newtext); 
				if(!isset($r['error'])) { break; return; }
				sleep(0.34);
				}
				$s = $vk->chatMessage($chatId, $newtext); 
				if(!isset($s['error'])) { break; return; }
				sleep(0.34);
				} //N=1
				} //L=1
				} //R=1
				} //i++
				//error?
				return;
		}	//–ø–∞—Ç–æ–≥–µ–Ω

		if (preg_match('#(–ø–ø|–≥–µ–Ω|–ø–∞—Ç–æ–≥–µ–Ω) (.{2,42})#ui', $message['text'], $p)) {
				$msg=$vk->messagesGetByConversationMessageId(UbVkApi::chat2PeerId($chatId),$object['conversation_message_id']);
				$mid=(int)@$msg['response']['items'][0]['id'];
				$newtext = ''; # –Ω—ñ—Ñ—ñ–≥–∞,–∞–±–æ —ñ–Ω—à—à–µ.
				$pfinded = Array(); # –ø—É—Å—Ç–∏–π –º–∞—Å–∏–≤
				$is_ok = 0;
				$citms = 0;
				$getText="–∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–∞—Ç–æ–≥–µ–Ω–æ–º ¬´{$p[2]}¬ª"; sleep(0.3);
				$res = $vk->messagesSearch("$getText", $peerId = null, $count = 100); sleep(0.3);
				if (isset($res['response']['items'])) {
				$newtext = UB_ICON_INFO." {$p[0]}:\n";//find
				$pfinded = Array();
				foreach($res['response']['items'] as $item){
				if(preg_match("#\[id([0-9]+)\|(.*)\] (–ø–æ–¥–≤–µ—Ä–≥|–ø–æ–¥–≤–µ—Ä–≥–ª–∞) –∑–∞—Ä–∞–∂–µ–Ω–∏—é –ø–∞—Ç–æ–≥–µ–Ω–æ–º ¬´(.+)¬ª#ui",
				$item['text'],$t)){
				$p_uid=(int)@$t[1];
				$pname=(string)@$t[4];
				if(!isset($pfinded[$p_uid]) && $pname == $p[2]) {
				$newtext.="\nüè∑ ¬´[id{$p_uid}|{$pname}]¬ª";
				$pfinded[$p_uid]=$pname;
				$is_ok+=1; }	//is_ok++
				}	//preg_match
				}	// as $item
				}//items
				if(!$newtext || !$is_ok || count($pfinded)==0){
				$newtext = "‚ùó –ü–∞—Ç–æ–≥–µ–Ω ¬´{$p[2]}¬ª –Ω–µ –∏–∑–≤–µ—Å—Ç–µ–Ω"; }
				if (count($pfinded) > 0){
				$newtext = UB_ICON_INFO." {$p[0]}:\n";//find
				foreach ($pfinded as $p_uid => $pname)	{
				$newtext.="\nüè∑ ¬´[id{$p_uid}|{$pname}]¬ª";}
				} //$pfinded
				if ($mid) {
				$r = $vk->messagesEdit(UbVkApi::chat2PeerId($chatId), $mid, $newtext); 
				if(!isset($r['error'])) { return; }
				sleep(0.34);
				}
				$s = $vk->chatMessage($chatId, $newtext); 
				return;
		}//#^–ø–ø .*

		$vk->chatMessage($chatId, UB_ICON_WARN . ' –§–£–ù–ö–¶–ò–û–ù–ê–õ –ù–ï –†–ï–ê–õ–ò–ó–û–í–ê–ù');
	}

    static function for_name($text) {
        return trim(preg_replace('#[^\pL0-9\=\?\!\@\\\%/\#\$^\*\(\)\-_\+ ,\.:;]+#ui', '', $text));
    }

    static function isMessagesEqual($m1, $m2) {
		return ($m1['from_id'] == $m2['from_id'] && $m1['conversation_message_id'] == $m2['conversation_message_id']/* && $m1['text'] == $m2['text']*/);
    }

    static function number($num, $one, $two, $more) {
        $num = (int)$num;
        $l2 = substr($num, strlen($num) - 2, 2);

        if ($l2 >= 5 && $l2 <= 20)
            return $more;
        $l = substr($num, strlen($num) - 1, 1);
        switch ($l) {
            case 1:
                return $one;
                break;
            case 2:
                return $two;
                break;
            case 3:
                return $two;
                break;
            case 4:
                return $two;
                break;
            default:
                return $more;
                break;
        }
    }

}